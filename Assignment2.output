Terminals which are not used

   FALSE
   TRUE


Grammar

    0 $accept: program $end

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    2 declarations: declaration
    3             | declaration declarations

    4 statements: statement
    5           | statement statements

    6 declaration: type IDENTIFIER SEMICOLON
    7            | type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    8 statement: SEMICOLON
    9          | IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

   10 expression: IDENTIFIER binOP IDENTIFIER

   11 binOP: addOP
   12      | mulOp

   13 addOP: PLUS
   14      | MINUS

   15 mulOp: MULTIPLY
   16      | DIVIDE
   17      | MODULO

   18 type: INT
   19     | BOOLEAN


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 6 7 8 9
OPEN_PARANTHESIS (259) 1
CLOSE_PARANTHESIS (260) 1
OPEN_SQUAREBRACKET (261) 7 9
CLOSE_SQUAREBRACKET (262) 7 9
OPEN_CURLYBRACE (263) 1
CLOSE_CURLYBRACE (264) 1
MAIN (265) 1
FALSE (266)
INT (267) 1 18
BOOLEAN (268) 19
TRUE (269)
EQUAL (270) 9
MINUS (271) 14
PLUS (272) 13
MODULO (273) 17
DIVIDE (274) 16
MULTIPLY (275) 15
IDENTIFIER (276) 6 7 9 10
INT_VALUE (277) 7


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
declarations (25)
    on left: 2 3, on right: 1 3
statements (26)
    on left: 4 5, on right: 1 5
declaration (27)
    on left: 6 7, on right: 2 3
statement (28)
    on left: 8 9, on right: 4 5
expression (29)
    on left: 10, on right: 9
binOP (30)
    on left: 11 12, on right: 10
addOP (31)
    on left: 13 14, on right: 11
mulOp (32)
    on left: 15 16 17, on right: 12
type (33)
    on left: 18 19, on right: 6 7


state 0

    0 $accept: . program $end

    INT  shift, and go to state 1

    program  go to state 2


state 1

    1 program: INT . MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    MAIN  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: INT MAIN . OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    OPEN_PARANTHESIS  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: INT MAIN OPEN_PARANTHESIS . CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    CLOSE_PARANTHESIS  shift, and go to state 6


state 6

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS . OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 7


state 7

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE . declarations statements CLOSE_CURLYBRACE

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    declarations  go to state 10
    declaration   go to state 11
    type          go to state 12


state 8

   18 type: INT .

    $default  reduce using rule 18 (type)


state 9

   19 type: BOOLEAN .

    $default  reduce using rule 19 (type)


state 10

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations . statements CLOSE_CURLYBRACE

    SEMICOLON   shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    statements  go to state 15
    statement   go to state 16


state 11

    2 declarations: declaration .
    3             | declaration . declarations

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 2 (declarations)

    declarations  go to state 17
    declaration   go to state 11
    type          go to state 12


state 12

    6 declaration: type . IDENTIFIER SEMICOLON
    7            | type . IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    IDENTIFIER  shift, and go to state 18


state 13

    8 statement: SEMICOLON .

    $default  reduce using rule 8 (statement)


state 14

    9 statement: IDENTIFIER . OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    OPEN_SQUAREBRACKET  shift, and go to state 19


state 15

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 20


state 16

    4 statements: statement .
    5           | statement . statements

    SEMICOLON   shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 4 (statements)

    statements  go to state 21
    statement   go to state 16


state 17

    3 declarations: declaration declarations .

    $default  reduce using rule 3 (declarations)


state 18

    6 declaration: type IDENTIFIER . SEMICOLON
    7            | type IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    SEMICOLON           shift, and go to state 22
    OPEN_SQUAREBRACKET  shift, and go to state 23


state 19

    9 statement: IDENTIFIER OPEN_SQUAREBRACKET . expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    IDENTIFIER  shift, and go to state 24

    expression  go to state 25


state 20

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE .

    $default  reduce using rule 1 (program)


state 21

    5 statements: statement statements .

    $default  reduce using rule 5 (statements)


state 22

    6 declaration: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 6 (declaration)


state 23

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET . INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    INT_VALUE  shift, and go to state 26


state 24

   10 expression: IDENTIFIER . binOP IDENTIFIER

    MINUS     shift, and go to state 27
    PLUS      shift, and go to state 28
    MODULO    shift, and go to state 29
    DIVIDE    shift, and go to state 30
    MULTIPLY  shift, and go to state 31

    binOP  go to state 32
    addOP  go to state 33
    mulOp  go to state 34


state 25

    9 statement: IDENTIFIER OPEN_SQUAREBRACKET expression . CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    CLOSE_SQUAREBRACKET  shift, and go to state 35


state 26

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE . CLOSE_SQUAREBRACKET SEMICOLON

    CLOSE_SQUAREBRACKET  shift, and go to state 36


state 27

   14 addOP: MINUS .

    $default  reduce using rule 14 (addOP)


state 28

   13 addOP: PLUS .

    $default  reduce using rule 13 (addOP)


state 29

   17 mulOp: MODULO .

    $default  reduce using rule 17 (mulOp)


state 30

   16 mulOp: DIVIDE .

    $default  reduce using rule 16 (mulOp)


state 31

   15 mulOp: MULTIPLY .

    $default  reduce using rule 15 (mulOp)


state 32

   10 expression: IDENTIFIER binOP . IDENTIFIER

    IDENTIFIER  shift, and go to state 37


state 33

   11 binOP: addOP .

    $default  reduce using rule 11 (binOP)


state 34

   12 binOP: mulOp .

    $default  reduce using rule 12 (binOP)


state 35

    9 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET . EQUAL expression SEMICOLON

    EQUAL  shift, and go to state 38


state 36

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 39


state 37

   10 expression: IDENTIFIER binOP IDENTIFIER .

    $default  reduce using rule 10 (expression)


state 38

    9 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL . expression SEMICOLON

    IDENTIFIER  shift, and go to state 24

    expression  go to state 40


state 39

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON .

    $default  reduce using rule 7 (declaration)


state 40

    9 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression . SEMICOLON

    SEMICOLON  shift, and go to state 41


state 41

    9 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON .

    $default  reduce using rule 9 (statement)
